require 'azure'
require_relative 'azure_vm_bootstrap'

Azure.configure do |config|
  config.management_certificate  = ENV["AZURE_MANAGEMENT_CERTIFICATE"]
  config.subscription_id         = ENV["AZURE_SUBSCRIPTION_ID"]
  config.management_endpoint     = ENV["AZURE_MANAGEMENT_ENDPOINT"]
end
virtual_machine = Azure::VirtualMachineManagementService.new
params = {
  :vm_name => '<%=@vm_name%>',
  :vm_user => '<%=@vm_user%>',
  :image => '<%=@image%>',
  :password => '<%=@password%>',
  :location => '<%=@location%>'
}
options = {
   :winrm_transport => <%=@winrm_transport || []%>,
   :storage_account_name => '<%=@storage_account_name%>',
   :cloud_service_name => '<%=@cloud_service_name%>',
   :tcp_endpoints => '<%=@tcp_endpoints%>',
   :private_key_file => '<%=@private_key_file%>',
   :certificate_file => '<%=@certificate_file%>',
   :vitual_network_name => '<%=@vitual_network_name%>',
   :affinity_group_name => '<%=@affinity_group_name%>',
   :subnet_name => '<%=@subnet_name%>',
   :ssh_port => '<%=@ssh_port%>',
   :vm_size => '<%=@vm_size%>'
}
options.delete_if {|key, value| value == ''  or value == nil}
server = virtual_machine.create_virtual_machine(params, options)
options[:node_ipaddress] = server.ipaddress

if options[:puppet_master_ip] && server
  test_tcp_connection(server)
  if  server.os_type == 'Linux'
    BootStrap.start(options)
  else
    puts '\npuppet installation on windows is not yet implemented.'
  end
end